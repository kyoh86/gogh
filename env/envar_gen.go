// Code generated by main.go DO NOT EDIT.

package env

import (
	gostrcase "github.com/stoewer/go-strcase"
	"log"
	"os"
)

type Envar struct {
	GithubHost *GithubHost
	GithubUser *GithubUser
	Roots      *Roots
}

func getEnvar(prefix string) (envar Envar, err error) {
	prefix = gostrcase.UpperSnakeCase(prefix)
	{
		v := os.Getenv(prefix + "GITHUB_HOST")
		if v == "" {
			log.Printf("info: there's no envar %sGITHUB_HOST (%v)", prefix, err)
		} else {
			var value GithubHost
			if err = value.UnmarshalText([]byte(v)); err != nil {
				return envar, err
			}
			envar.GithubHost = &value
		}
	}
	{
		v := os.Getenv(prefix + "GITHUB_USER")
		if v == "" {
			log.Printf("info: there's no envar %sGITHUB_USER (%v)", prefix, err)
		} else {
			var value GithubUser
			if err = value.UnmarshalText([]byte(v)); err != nil {
				return envar, err
			}
			envar.GithubUser = &value
		}
	}
	{
		v := os.Getenv(prefix + "ROOTS")
		if v == "" {
			log.Printf("info: there's no envar %sROOTS (%v)", prefix, err)
		} else {
			var value Roots
			if err = value.UnmarshalText([]byte(v)); err != nil {
				return envar, err
			}
			envar.Roots = &value
		}
	}
	return
}
